# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
   - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "reaper"

    metrics_path: '/prometheusMetrics'
    scrape_interval: 5s
    # scheme defaults to 'http'.
    static_configs:
      - targets: ["192.168.1.99:8081"] 
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: "io_cassandrareaper_service_RepairRunner_segments(Done|Total)_(.*)_(.*)_(.*)"
        target_label: cluster
        replacement: '${2}'
      - source_labels: [__name__]
        regex: "io_cassandrareaper_service_RepairRunner_segments(Done|Total)_(.*)_(.*)_(.*)"
        target_label: keyspace
        replacement: '${3}'
      - source_labels: [__name__]
        regex: "io_cassandrareaper_service_RepairRunner_segments(Done|Total)_(.*)_(.*)_(.*)"
        target_label: repair_id
        replacement: '${4}'
      - source_labels: [__name__]
        regex: "io_cassandrareaper_service_RepairRunner_segments(Done|Total)_.*"
        target_label: __name__
        replacement: 'io_cassandrareaper_service_RepairRunner_segments${1}'
